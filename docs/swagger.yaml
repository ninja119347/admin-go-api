definitions:
  dto.CreateUserDto:
    properties:
      depId:
        type: integer
      email:
        type: string
      id:
        type: integer
      password:
        type: string
      phone:
        type: string
      postId:
        type: integer
      username:
        type: string
    required:
    - email
    - id
    - password
    - phone
    - username
    type: object
  dto.LoginDto:
    properties:
      idKey:
        description: 验证码id
        type: string
      image:
        description: 验证码
        maxLength: 6
        minLength: 4
        type: string
      password:
        type: string
      username:
        type: string
    required:
    - idKey
    - image
    - password
    - username
    type: object
  dto.UpdateUserDto:
    properties:
      depId:
        type: integer
      email:
        description: |-
          TODO 可以单独做一个密码验证的方法
          Password string `json:"password" binding:"require"`
        type: string
      id:
        type: integer
      phone:
        type: string
      postId:
        type: integer
      username:
        type: string
    required:
    - id
    type: object
  result.Result:
    properties:
      code:
        description: 状态码
        type: integer
      data:
        description: 返回的数据
      msg:
        description: 提示信息
        type: string
    type: object
info:
  contact: {}
  description: 后台管理系统API接口文档
  title: admin-go-api
  version: "1.0"
paths:
  /api/captcha:
    get:
      description: 验证码接口
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/result.Result'
      summary: 验证码接口
  /api/login:
    post:
      description: 用户登录接口
      parameters:
      - description: data
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/dto.LoginDto'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/result.Result'
      summary: 用户登录接口
  /api/register:
    post:
      description: 新增用户接口
      parameters:
      - description: data
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/dto.CreateUserDto'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/result.Result'
      summary: 新增用户接口
  /api/user:
    get:
      description: 查询用户接口
      parameters:
      - description: 用户名
        in: query
        name: username
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/result.Result'
      summary: 查询用户接口
  /api/user/{id}:
    delete:
      description: 删除用户接口
      parameters:
      - description: 用户ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/result.Result'
      summary: 删除用户接口
    put:
      description: 更新用户接口
      parameters:
      - description: 用户ID
        in: path
        name: id
        required: true
        type: integer
      - description: data
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/dto.UpdateUserDto'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/result.Result'
      summary: 更新用户接口
  /api/user/list:
    get:
      description: 分页查询用户接口
      parameters:
      - description: 页码
        in: query
        name: page
        required: true
        type: integer
      - description: 每页数量
        in: query
        name: pageSize
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/result.Result'
      summary: 分页查询用户接口
securityDefinitions:
  ApiKeyAuth:
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
